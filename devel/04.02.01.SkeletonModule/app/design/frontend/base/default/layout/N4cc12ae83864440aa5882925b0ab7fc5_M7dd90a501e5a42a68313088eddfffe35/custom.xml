<?xml version="1.0" encoding="UTF-8"?>

<!--
    All XML Layout schemas are loaded and parsed at every request,
    no matter what controller or module performs operation
    This enables us to supply with our module a layout modification
    for any other module or core component.
-->

<layout>
    <!--

    Here go update handles, direct (immediate) descendants of <layout> node


    Autogenerated update handles are:

    <STORE_...>  -  <STORE_default>, <STORE_german>, <STORE_french>, etc.
                    The suffix is Store Code.

    <THEME_..._..._...>  -  <THEME_frontend_rwd_default>, <THEME_frontend_rwd_dyslexia>, etc.
                            The suffix is Areaname_Packagename_Themename.

    <[Full Action Name]>  -  <catalog_product_view>, <N4cc12ae83864440aa5882925b0ab7fc5INFILE0fae8298b00345ac9926a5cf7778dec4_M7dd90a501e5a42a68313088eddfffe35INFILE0fae8298b00345ac9926a5cf7778dec4_index_layout>, etc
                             The entity is RouteName_controllername_actionname.
                             Here RouteNames are catalog, N4cc12ae83864440aa5882925b0ab7fc5INFILE0fae8298b00345ac9926a5cf7778dec4_M7dd90a501e5a42a68313088eddfffe35INFILE0fae8298b00345ac9926a5cf7778dec4
                             RouteName is exactly what one defines in config.xml under <routers> node

     -->


    <!-- This is the default update handle -->
    <default>
        <!-- Now we address a "content" block, which happens to be declared in default XML layout -->
        <!-- It is of text_list type, by the way, and render all its children -->
        <reference name="content">
            <!-- Now we add the following block to the "content" block -->
            <!-- It's like cd to a directory and create a file there -->
            <block type="core/text" name="justrandomblock">    <!-- Just for simplicity, to not have a template file -->
                <action method="setText">
                    <arg>That's a text set within a layout xml file XD</arg>
                </action>
            </block>

            <!-- Call nonexistent setter of "content" block, will fall back to magic use -->
            <action method="setSomethingNonExistent">
                <arg>This is a string.</arg>
            </action>
        </reference>
    </default>


    <!-- This is a way to update a catalog product view -->
    <catalog_product_view>
        <!-- Now we address a "content" block, which happens to be declared in default XML layout -->
        <!-- It is of text_list type, by the way, and render all its children -->
        <reference name="content">
            <!-- Now we add the following block to the "content" block -->
            <!-- It's like cd to a directory and create a file there -->
            <block type="core/text" name="anotherrandomblock">    <!-- Just for simplicity, to not have a template file -->
                <action method="setText">
                    <arg>That's a text set within a layout xml file!!!</arg>
                </action>
            </block>
        </reference>
    </catalog_product_view>



</layout>